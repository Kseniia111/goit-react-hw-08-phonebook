{"version":3,"file":"static/js/954.0dc4a97f.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.js","components/ContactList/ContactList.styled.js","redux/Selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.section`\n  display: block;\n  max-width: 500px;\n\n  padding: 16px;\n  margin: 0 auto;\n  margin-top: 20px;\n  margin-bottom: 20px;\n\n  background-color: rgb(234, 234, 241);\n  box-shadow: 9px 9px 14px -6px rgba(105, 103, 105, 1);\n  border-radius: 4px;\n`;\n","import { Wrapper } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Wrapper>\n      <h3>{title}</h3>\n      {children}\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding-left: 15px;\n`;\n\nexport const DeleteButton = styled.button`\n  background-color: #fff;\n  padding: 8px 16px;\n  cursor: pointer;\n  border: none;\n  border-radius: 5px;\n\n  &:hover {\n    background-color: gray;\n    color: #fff;\n  }\n`;\n// import styled from 'styled-components';\n\n// export const ContactContainer = styled.ul`\n//   margin-top: 25px;\n// `;\n\n// export const ContactEl = styled.li`\n//   margin-left: 15px;\n//   margin-top: 10px;\n// `;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.loading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(el =>\n      el.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { DeleteButton, List } from './ContactList.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectVisibleContacts } from 'redux/Selectors';\nimport { deleteContact } from 'redux/contactsOperations';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <List>\n      {visibleContacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <p>{name} </p>\n          <p>{number}</p>\n          <DeleteButton\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete contact\n          </DeleteButton>\n        </li>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const InputFilter = styled.input`\n  margin-botoom: 10px;\n  width: 350px;\n  border: 1px solid #d3d3d3;\n`;\n","import { InputFilter } from './Filter.styled';\n\nimport { useDispatch } from 'react-redux';\n\nimport { changeFilterValue } from 'redux/FilterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = evt => {\n    const value = evt.currentTarget.value;\n    dispatch(changeFilterValue(value));\n  };\n\n  return (\n    <div>\n      <InputFilter\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Contacts filter\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: block;\n  border-radius: 5px;\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  margin-top: 10px;\n  border-radius: 5px;\n`;\n\nexport const Input = styled.input`\n  border: 1px solid #d3d3d3;\n  cursor: pointer;\n  margin-top: 10px;\n  margin-botom: 10px;\n  width: 360px;\n`;\nexport const Button = styled.button`\n  background-color: #fff;\n  padding: 8px 16px;\n  cursor: pointer;\n  border: none;\n  border-radius: 5px;\n  margin-top: 15px;\n\n  &:hover {\n    background-color: gray;\n    color: #fff;\n  }\n`;\n","import { Label, StyledForm, Button } from './ContactForm.styled';\nimport { Formik, Field } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport toast, { Toaster } from 'react-hot-toast';\n\nimport { selectContacts } from 'redux/Selectors';\nimport { addContact } from 'redux/contactsOperations';\n\nimport * as Yup from 'yup';\n\nconst validSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Too short name!').required('Required!'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const checkedContact = contact => {\n    return contacts.some(\n      element => element.name.toLowerCase() === contact.name.toLowerCase()\n    );\n  };\n\n  const newContact = contact => {\n    if (checkedContact(contact)) {\n      toast.error(`${contact.name} already in contacts`);\n    } else {\n      dispatch(addContact(contact));\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={validSchema}\n      onSubmit={(values, actions) => {\n        newContact(values);\n        actions.resetForm();\n      }}\n    >\n      <StyledForm>\n        <Label>\n          Name:\n          <Field name=\"name\" type=\"text\" />\n        </Label>\n        <Label>\n          Tel:\n          <Field name=\"number\" type=\"tel\" />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n        <Toaster />\n      </StyledForm>\n    </Formik>\n  );\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Section } from 'components/Section/Section';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/Selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contactsOperations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </div>\n  );\n}\n"],"names":["Wrapper","styled","Section","title","children","List","DeleteButton","selectContacts","state","contacts","items","selectIsLoading","loading","selectVisibleContacts","createSelector","filter","el","name","toLowerCase","includes","ContactList","visibleContacts","useSelector","dispatch","useDispatch","map","id","number","type","onClick","deleteContact","InputFilter","Filter","placeholder","onChange","evt","value","currentTarget","changeFilterValue","StyledForm","Form","Label","Button","validSchema","Yup","shape","min","required","ContactForm","newContact","contact","some","element","checkedContact","addContact","toast","initialValues","validationSchema","onSubmit","values","actions","resetForm","Contacts","isLoading","useEffect","fetchContacts"],"sourceRoot":""}